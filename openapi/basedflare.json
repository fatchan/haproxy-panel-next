{
  "openapi": "3.0.0",
  "info": {
    "title": "Basedflare API",
    "description": "API for Basedflare control panel",
    "version": "0.0.1"
  },
  "tags": [
    {
      "name": "Edge Rules",
      "description": "APIs for cdn edge rules"
    },
    {
      "name": "Cache Purge",
      "description": "APIs for purging cache for path, prefix, or domain"
    },
    {
      "name": "Live Streaming",
      "description": "APIs for streaming endpoints"
    },
    {
      "name": "Live Streaming (Forwarded Webhooks)",
      "description": "Webhooks related to streaming that are sent TO your server"
    }
  ],
  "servers": [
    {
      "url": "https://cp.basedflare.com",
      "description": "Production"
    },
    {
      "url": "https://cp.basedflare.net",
      "description": "Backup"
    },
    {
      "url": "http://127.0.0.1:3000",
      "description": "Development (local server)"
    }
  ],
  "paths": {
    "/forms/cache/purge": {
      "post": {
        "tags": [
          "Cache Purge"
        ],
        "summary": "Purge cache for a specific URL, URL prefix, or entire domain",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL to purge. For domain purging, use the domain without a path.",
                    "example": "https://yourdomain.com/folder/example.png",
                    "examples": {
                      "example1": {
                        "value": "https://yourdomain.com/folder/example.png",
                        "description": "Single URL to purge"
                      },
                      "example2": {
                        "value": "https://yourdomain.com/folder/",
                        "description": "URL prefix to purge (purges all content under this path)"
                      },
                      "example3": {
                        "value": "https://yourdomain.com/",
                        "description": "Whole domain to purge (no path included)"
                      }
                    }
                  },
                  "ban": {
                    "type": "boolean",
                    "description": "Indicates whether to ban the URL or prefix (true) or purge just a single url (false).",
                    "example": false
                  }
                },
                "required": [
                  "url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully initiated cache purge",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "403": {
            "description": "Domain not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Domain not authorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/map/blockedip.json": {
      "get": {
        "tags": [
          "Edge Rules"
        ],
        "summary": "List all blocked IP addresses and their details",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of blocked IPs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "map": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "0x7fae1ffca490"
                          },
                          "key": {
                            "type": "string",
                            "example": "1.2.3.4"
                          },
                          "value": {
                            "type": "string",
                            "example": "admin"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "example": "blockedip"
                    },
                    "mapNotes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "example": {
                        "1.2.3.4": "example"
                      }
                    },
                    "user": {
                      "$ref": "#/components/schemas/SessionUser"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/map/blockedip/add": {
      "post": {
        "tags": [
          "Edge Rules"
        ],
        "summary": "Add a new blocked IP address or subnet",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The IP address or subnet to block (supports IPv4, IPv6, and CIDR notation)",
                    "example": "1.2.3.4",
                    "examples": {
                      "example1": {
                        "value": "1.2.3.4",
                        "description": "Single IPv4 address"
                      },
                      "example2": {
                        "value": "1.2.3.0/24",
                        "description": "IPv4 subnet in CIDR notation"
                      },
                      "example3": {
                        "value": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
                        "description": "Single IPv6 address"
                      },
                      "example4": {
                        "value": "2001:0db8:85a3::/64",
                        "description": "IPv6 subnet in CIDR notation"
                      }
                    }
                  },
                  "note": {
                    "type": "string",
                    "description": "Optional note for the blocked IP",
                    "example": "example"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added the blocked IP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "redirect": {
                      "type": "string",
                      "example": "/map/blockedip"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/forms/map/blockedip/delete": {
      "delete": {
        "tags": [
          "Edge Rules"
        ],
        "summary": "Delete a blocked IP address or subnet",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The IP address or subnet to unblock (supports IPv4, IPv6, and CIDR notation)",
                    "example": "1.2.3.4"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the blocked IP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "redirect": {
                      "type": "string",
                      "example": "/map/blockedip"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/streams.json": {
      "get": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Get streams information",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "streams": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Streams"
                      }
                    },
                    "streamKeys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StreamKey"
                      }
                    },
                    "streamWebhooks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StreamWebhook"
                      }
                    },
                    "user": {
                      "$ref": "#/components/schemas/SessionUser"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/streams/viewcounts.json": {
      "get": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Get view counts for streams",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with view counts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "hlsViewers": {
                        "type": "integer",
                        "description": "Number of HLS viewers"
                      },
                      "llhlsViewers": {
                        "type": "integer",
                        "description": "Number of LL-HLS viewers"
                      },
                      "totalViewers": {
                        "type": "integer",
                        "description": "Total number of viewers"
                      },
                      "successfulEdgeNames": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Names of successful edges"
                        }
                      }
                    },
                    "required": [
                      "hlsViewers",
                      "llhlsViewers",
                      "totalViewers",
                      "successfulEdgeNames"
                    ]
                  }
                },
                "example": {
                  "misterx": {
                    "hlsViewers": 10,
                    "llhlsViewers": 5,
                    "totalViewers": 15,
                    "successfulEdgeNames": [
                      "us-1",
                      "de-1"
                    ]
                  },
                  "potatoman": {
                    "hlsViewers": 20,
                    "llhlsViewers": 10,
                    "totalViewers": 30,
                    "successfulEdgeNames": [
                      "us-1",
                      "de-1"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/stream": {
      "post": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Add a new streamer and return the stream key",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appName": {
                    "type": "string",
                    "example": "jimmyjohn123",
                    "description": "Name of the streamer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "streamKey": {
                      "type": "string",
                      "example": "f6a4f78ce72cb20c36c76c5509a4b052"
                    },
                    "_id": {
                      "type": "string",
                      "example": "67a822f4518bc836547c9b1a"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "description": "Conflict (appName already exists)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Stream key with this name already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error inserting key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to create new stream key"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/stream/{id}/conclude": {
      "post": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Conclude a stream. Immediately stops playback, disconnects the streamer and prevents reconnect for 2 minutes.",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Stream key id",
            "schema": {
              "type": "string",
              "example": "67a822f4518bc836547c9b1a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/forms/stream/{id}/restart": {
      "post": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Deletes the stream, but unlike conclude will allow immediate reconnection to clear e.g. stuck streams",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Stream key id",
            "schema": {
              "type": "string",
              "example": "67a822f4518bc836547c9b1a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/forms/stream/{id}/toggle": {
      "post": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Toggle a stream key. Disabling concludes the stream for this key if live. Disabled keys won't be able to start streaming.",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Stream key id",
            "schema": {
              "type": "string",
              "example": "67a822f4518bc836547c9b1a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/forms/stream/{id}": {
      "delete": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Delete stream key. Deleting concludes the stream for this key if live.",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Stream key id",
            "schema": {
              "type": "string",
              "example": "67a822f4518bc836547c9b1a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/forms/stream/webhook": {
      "post": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Create a stream webhook",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/api/v1/webhook-endpoint"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "admissions",
                      "alert"
                    ],
                    "example": "admissions"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/forms/stream/webhook/{id}": {
      "delete": {
        "tags": [
          "Live Streaming"
        ],
        "summary": "Delete a stream webhook",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Stream webhook id",
            "schema": {
              "type": "string",
              "example": "67a822f4518bc836547c9b1a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/yourdomain.com/your-admissions-webhook-url": {
      "post": {
        "tags": [
          "Live Streaming (Forwarded Webhooks)"
        ],
        "summary": "Receive stream admissions webhook events. NOTE: sent to your custom URL specified in the \"Create a stream webhook\" API.",
        "operationId": "admissionsWebhook",
        "parameters": [
          {
            "$ref": "#/components/headers/X-BF-Signature"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "Stream start": {
                  "summary": "Opening Event",
                  "value": {
                    "direction": "incoming",
                    "protocol": "RTMP",
                    "status": "opening",
                    "time": "2025-03-29T05:55:43.394+00:00",
                    "url": "rtmp://ome-origin-us-1.bfcdn.host:1935/app/6755124635874905051+tester?key=xxxxxxxxxxxxxxxxxxxxxxxxx"
                  }
                },
                "Stream stop": {
                  "summary": "Closing Event",
                  "value": {
                    "direction": "incoming",
                    "protocol": "RTMP",
                    "status": "closing",
                    "time": "2025-03-29T05:55:47.790+00:00",
                    "url": "rtmp://ome-origin-us-1.bfcdn.host:1935/app/6755124635874905051+tester?key=xxxxxxxxxxxxxxxxxxxxxx",
                    "new_url": "rtmp://ome-origin-us-1.bfcdn.host:1935/app/6755124635874905051+tester?key=xxxxxxxxxxxxxxxxxxxxxxx"
                  }
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "request": {
                    "type": "object",
                    "properties": {
                      "direction": {
                        "type": "string",
                        "enum": [
                          "incoming"
                        ]
                      },
                      "protocol": {
                        "type": "string",
                        "enum": [
                          "RTMP"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "opening",
                          "closing"
                        ]
                      },
                      "time": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "new_url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "direction",
                      "protocol",
                      "status",
                      "time",
                      "url"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/yourdomain.com/your-alert-webhook-url": {
      "post": {
        "tags": [
          "Live Streaming (Forwarded Webhooks)"
        ],
        "summary": "Receive stream alert webhook events. NOTE: sent to your custom URL specified in the \"Create a stream webhook\" API.",
        "operationId": "alertWebhook",
        "parameters": [
          {
            "$ref": "#/components/headers/X-BF-Signature"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "messages": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "OK"
                              ],
                              "example": "OK"
                            },
                            "description": {
                              "type": "string",
                              "example": "The current status is good"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "INGRESS_HAS_BFRAME"
                              ],
                              "example": "INGRESS_HAS_BFRAME"
                            },
                            "description": {
                              "type": "string",
                              "example": "There are B-Frames in the ingress stream"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "INGRESS_LONG_KEY_FRAME_INTERVAL"
                              ],
                              "example": "INGRESS_LONG_KEY_FRAME_INTERVAL"
                            },
                            "description": {
                              "type": "string",
                              "example": "The ingress stream's current keyframe interval (4.1 seconds) is too long. Please use a keyframe interval of 4.0 seconds or less"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "INGRESS_BITRATE_HIGH"
                              ],
                              "example": "INGRESS_BITRATE_HIGH"
                            },
                            "description": {
                              "type": "string",
                              "example": "The ingress stream's current bitrate (5369946 bps) is higher than the configured bitrate (4000000 bps)"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "sourceInfo": {
                    "type": "object",
                    "properties": {
                      "createdTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-29T05:12:12.365+00:00"
                      },
                      "name": {
                        "type": "string",
                        "example": "6755124635874905051+tester"
                      },
                      "sourceType": {
                        "type": "string",
                        "example": "Rtmp"
                      },
                      "sourceUrl": {
                        "type": "string",
                        "example": "TCP://123.123.123.123:50130"
                      },
                      "tracks": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/StreamTrack"
                        }
                      }
                    }
                  },
                  "sourceUri": {
                    "type": "string",
                    "example": "#default#app/6755124635874905051+tester"
                  },
                  "type": {
                    "type": "string",
                    "example": "INGRESS"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "headers": {
      "X-BF-Signature": {
        "name": "X-Bf-Signature",
        "in": "header",
        "description": "A SHA256 HMAC signature of the payload (request body). This signature should be checked by your backend to verify the integrity and authenticity of the request.",
        "type": "string",
        "example": "71f453558de50865fb6feec836f4ed868542664afac639bc070304259418bc52"
      }
    },
    "schemas": {
      "StreamTrack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "Video"
          },
          "type": {
            "type": "string",
            "example": "Video"
          },
          "video": {
            "type": "object",
            "properties": {
              "bitrate": {
                "type": "string",
                "example": "4500000"
              },
              "bitrateAvg": {
                "type": "string",
                "example": "3541368"
              },
              "bitrateConf": {
                "type": "string",
                "example": "4500000"
              },
              "bitrateLatest": {
                "type": "string",
                "example": "3749610"
              },
              "bypass": {
                "type": "boolean",
                "example": false
              },
              "codec": {
                "type": "string",
                "example": "H264"
              },
              "deltaFramesSinceLastKeyFrame": {
                "type": "integer",
                "example": 1
              },
              "framerate": {
                "type": "integer",
                "example": 30
              },
              "framerateAvg": {
                "type": "integer",
                "example": 30
              },
              "framerateConf": {
                "type": "integer",
                "example": 30
              },
              "framerateLatest": {
                "type": "number",
                "example": 29.97
              },
              "hasBframes": {
                "type": "boolean",
                "example": false
              },
              "height": {
                "type": "integer",
                "example": 720
              },
              "keyFrameInterval": {
                "type": "number",
                "example": 29.731
              },
              "keyFrameIntervalAvg": {
                "type": "number",
                "example": 29.731
              },
              "keyFrameIntervalConf": {
                "type": "integer",
                "example": 0
              },
              "keyFrameIntervalLatest": {
                "type": "integer",
                "example": 30
              },
              "width": {
                "type": "integer",
                "example": 1280
              }
            }
          },
          "audio": {
            "type": "object",
            "properties": {
              "bitrate": {
                "type": "string",
                "example": "128000"
              },
              "bitrateAvg": {
                "type": "string",
                "example": "130576"
              },
              "bitrateConf": {
                "type": "string",
                "example": "128000"
              },
              "bitrateLatest": {
                "type": "string",
                "example": "130584"
              },
              "bypass": {
                "type": "boolean",
                "example": false
              },
              "channel": {
                "type": "integer",
                "example": 2
              },
              "codec": {
                "type": "string",
                "example": "AAC"
              },
              "samplerate": {
                "type": "integer",
                "example": 48000
              }
            }
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "CSRFToken": {
        "type": "string"
      },
      "SessionUser": {
        "description": "additional session data returned from most endpoints",
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "admin"
          },
          "streamsId": {
            "type": "string",
            "example": "651436708957"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "example.org",
              "www.example.org",
              "basedflare.com"
            ]
          },
          "onboarding": {
            "type": "boolean",
            "example": true
          },
          "allowedTemplates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "basic",
              "nocogent",
              "anycast",
              "cn2"
            ]
          },
          "numCerts": {
            "type": "integer",
            "example": 34
          },
          "emailVerified": {
            "type": "boolean",
            "example": true
          },
          "billing": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "example": "Enterprise plan"
              },
              "price": {
                "type": "number",
                "format": "float",
                "example": 100
              }
            }
          },
          "maxDomains": {
            "type": "integer",
            "example": 5
          },
          "cc": {
            "type": "string",
            "example": "oc"
          }
        }
      },
      "Streams": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "app/651436708957+jimmyjohn123"
        ]
      },
      "StreamKey": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "67a822f4518bc836547c9b1a"
          },
          "userName": {
            "type": "string",
            "example": "admin"
          },
          "enabled": {
            "type": "boolean",
            "example": "false"
          },
          "appName": {
            "type": "string",
            "example": "jimmyjohn123"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-02-09T03:37:24.814Z"
          },
          "streamKey": {
            "type": "string",
            "example": "072246f8b80cc716041290112d4a19ec"
          }
        }
      },
      "StreamWebhook": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "67b43b574a296966663bf4ec"
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-02-18T07:48:39.729Z"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/api/v1/webhook-endpoint"
          },
          "type": {
            "type": "string",
            "enum": [
              "admissions",
              "alert"
            ],
            "example": "admissions"
          },
          "signingSecret": {
            "type": "string",
            "example": "988f4cc158015f60b8a02c2200dca32b27062522e76024ceb8303cd41d23352e"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Bearer token for API authentication. Use 'Bearer {token}'"
      }
    }
  }
}
